
#include <stcp/stcp.h>
#include <stcp/api.h>


namespace slank {




// ERASE
// void open_udp_port(uint16_t port)
// {
//     udp_module& udp = core::instance().udp;
//     udp.ioctl(STCP_SIOCOPENUDPPORT, &port);
// }
//
//
// void close_udp_port(uint16_t port)
// {
//     udp_module& udp = core::instance().udp;
//     // udp.ioctl(STCP_SIOCCLOSEUDPPORT, &port);
// }


// void send_packet_test_ip_mod(uint8_t o1, uint8_t o2, uint8_t o3, uint8_t o4)
// {
//     ip_module& ip = core::instance().ip;
//
// #if 1
//     uint8_t buf[2000];
//     memset(buf, 0xee, sizeof buf);
// #else
//     uint8_t buf[] = {
//         // #<{(| ip hdr |)}>#
//         // 0x45, 0x00, 0x00, 0x54, 0x7e, 0x4d, 0x40, 0x00,
//         // 0x40, 0x01, 0x7e, 0x9a, 0xc0, 0xa8, 0xde, 0x0b,
//         // 0xc0, 0xa8, 0xde, 0x64,
//
//         #<{(| icmp hdr |)}>#
//         0x08, 0x00, 0x39, 0x86, 0x60, 0xd7, 0x00, 0x01,
//         0x59, 0xf4, 0xe9, 0x57, 0x00, 0x00, 0x00, 0x00,
//         0x54, 0x82, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
//
//         #<{(| icmp data |)}>#
//         0x10, 0x11, 0x12, 0x13, 0x14, 0x15,
//         0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d,
//         0x1e, 0x1f, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25,
//         0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d,
//         0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35,
//         0x36, 0x37,
//     };
// #endif
//     stcp_sockaddr dst(STCP_AF_INET);
//     dst.inet_addr(o1, o2, o3, o4);
//     ip.sendto(buf, sizeof(buf), &dst, STCP_IPPROTO_ICMP);
// }

    // stcp_sockaddr_in dst;
    // dst.inet_addr(192, 168, 222, 11);
    // mbuf* msg = rte::pktmbuf_alloc(core::instance().dpdk.get_mempool());
    // uint8_t icmp_raw[] = {
    //     0x08, 0x00, 0x39, 0x86, 0x60, 0xd7, 0x00, 0x01,
    //     0x59, 0xf4, 0xe9, 0x57, 0x00, 0x00, 0x00, 0x00,
    //     0x54, 0x82, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
    //
    //     #<{(| icmp data |)}>#
    //     0x10, 0x11, 0x12, 0x13, 0x14, 0x15,
    //     0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d,
    //     0x1e, 0x1f, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25,
    //     0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d,
    //     0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35,
    //     0x36, 0x37,
    // };
    // msg->pkt_len = sizeof(icmp_raw);
    // msg->data_len = sizeof(icmp_raw);
    // uint8_t* p = rte::pktmbuf_mtod<uint8_t*>(msg);
    // memcpy(p, icmp_raw, sizeof(icmp_raw));
    // core::instance().ip.tx_push(msg, &dst, STCP_IPPROTO_ICMP);



} /* namespace slank */
